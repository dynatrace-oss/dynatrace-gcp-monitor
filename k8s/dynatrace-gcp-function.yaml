apiVersion: v1
kind: ServiceAccount
metadata:
  name: dynatrace-gcp-function-sa
  namespace: dynatrace
automountServiceAccountToken: false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dynatrace-gcp-function-config
  namespace: dynatrace
data:
  # coma separated list of GCP services, which should be queried for metrics and ingested into Dynatrace
  GCP_SERVICES: "api,cloud_function,cloudsql_database,datastore_request,filestore_instance,gcs_bucket,https_lb_rule,internal_http_lb_rule,internal_tcp_lb_rule,internal_udp_lb_rule,tcp_lb_rule,udp_lb_rule,pubsub_snapshot,pubsub_subscription,pubsub_topic,pubsublite_topic_partition,k8s_pod,k8s_node,k8s_container,k8s_cluster,gce_instance"
  # if true function will output lines of metrics into stdout
  PRINT_METRIC_INGEST_INPUT: "false"
  # if true function requires valid SSL certificates when communicating with Dynatrace cluster
  # may be used to bypass SSL certificates errors when traffic is proxied through Active Gate with self-signed certificate
  REQUIRE_VALID_CERTIFICATE: "true"
  # Determines a caller-specified project for quota and billing purposes 
  # if set to source: monitoring API calls are booked towards project where K8S container is running
  # if set to destination: monitoring API calls are booked towards project which is monitored
  # REQUIRES serviceusage.services.use Permission granted for Service Account!
  SERVICE_USAGE_BOOKING: "source"
  # Depending on value of this flag, function will use proxy settings for either Dynatrace, GCP API or both.
  # if set to ALL: proxy settings will be used for requests to Dynatrace and GCP API
  # if set to DT_ONLY: proxy settings will be used only for requests to Dynatrace
  # if set to GCP_ONLY: proxy settings will be used only for requests to GCP API
  # if not set: default, proxy settings won't be used
  USE_PROXY: ""
  # Import predefined dashboards for selected services. Allowed values: `yes`, `no`
  IMPORT_DASHBOARDS: "yes"
  # Import predefined alerting rules (inactive by default) for selected services. Allowed values: `yes`, `no`
  IMPORT_ALERTS: "yes"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dynatrace-gcp-function
  labels:
    app: dynatrace-gcp-function
  namespace: dynatrace
spec:
  selector:
    matchLabels:
      app: dynatrace-gcp-function
  replicas: 1
  template:
    metadata:
      labels:
        app: dynatrace-gcp-function
      annotations:
        "version" : "1"
    spec:
      serviceAccountName: dynatrace-gcp-function-sa
      automountServiceAccountToken: false
      containers:
      - image: dynatrace/dynatrace-gcp-function
        name: dynatrace-gcp-function      
        imagePullPolicy: Always
        env:
        - name: GCP_SERVICES
          valueFrom:
            configMapKeyRef:
              name: dynatrace-gcp-function-config
              key: GCP_SERVICES
        - name: PRINT_METRIC_INGEST_INPUT
          valueFrom:
            configMapKeyRef:
              name: dynatrace-gcp-function-config
              key: PRINT_METRIC_INGEST_INPUT
        - name: REQUIRE_VALID_CERTIFICATE
          valueFrom:
            configMapKeyRef:
              name: dynatrace-gcp-function-config
              key: REQUIRE_VALID_CERTIFICATE
        - name: SERVICE_USAGE_BOOKING
          valueFrom:
            configMapKeyRef:
              name: dynatrace-gcp-function-config
              key: SERVICE_USAGE_BOOKING
        - name: USE_PROXY
          valueFrom:
            configMapKeyRef:
              name: dynatrace-gcp-function-config
              key: USE_PROXY
        - name: IMPORT_DASHBOARDS
          valueFrom:
            configMapKeyRef:
              name: dynatrace-gcp-function-config
              key: IMPORT_DASHBOARDS
        - name: IMPORT_ALERTS
          valueFrom:
            configMapKeyRef:
              name: dynatrace-gcp-function-config
              key: IMPORT_ALERTS
        - name: DYNATRACE_ACCESS_KEY_SECRET_NAME
          value: DYNATRACE_ACCESS_KEY
        - name: DYNATRACE_URL_SECRET_NAME
          value: DYNATRACE_URL
        - name: DYNATRACE_URL
          valueFrom:
            secretKeyRef:
              name: dynatrace-gcp-function-secret
              key: url
        - name: DYNATRACE_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: dynatrace-gcp-function-secret
              key: access-key   
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10